/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the Java plugin
    id 'java'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
    mavenCentral()
//    google()
}


dependencies {
    // Apache Commmons
    implementation 'commons-codec:commons-codec:+'
    implementation 'org.apache.commons:commons-csv:+'
    implementation 'org.apache.commons:commons-dbcp2:+'
    implementation 'org.apache.commons:commons-io:+'
    implementation 'org.apache.commons:commons-lang3:+'
    implementation 'commons-logging:commons-logging:+'
    implementation 'org.apache.commons:commons-math3:+'
    implementation 'org.apache.commons:commons-pool2:+'
    implementation 'org.apache.commons:commons-text:+'

    // Apache
//    implementation 'org.apache.opennlp:opennlp-tools:2.+'
//    implementation 'org.apache.opennlp:opennlp-uima:2.+'
    implementation 'org.apache.pdfbox:pdfbox:3.+'
    
    // Jakarta
    implementation 'jakarta.activation:jakarta.activation-api:+'
    implementation 'jakarta.mail:jakarta.mail-api:+'

    // Google GCP
    implementation platform('com.google.cloud:libraries-bom:26.45.0')
    implementation 'com.google.cloud:google-cloud-storage'
    implementation 'com.google.cloud:google-cloud-bigquery'
    implementation 'com.google.cloud:google-cloud-compute'
    implementation 'com.google.cloud:google-cloud-pubsub'
    implementation 'com.google.cloud:google-cloud-aiplatform'
    implementation 'com.google.apis:google-api-services-healthcare:+'
    implementation 'com.google.code.gson:gson:+'

    // Log4J2 and Log4J-1.2 compatibility
    implementation 'org.apache.logging.log4j:log4j-core:2.+'
    implementation 'org.apache.logging.log4j:log4j-api:2.+'
    implementation 'org.apache.logging.log4j:log4j-web:2.+'
    implementation 'org.apache.logging.log4j:log4j-1.2-api:2.+'

    // Others
    implementation 'org.antlr:antlr4-runtime:4.+'
    implementation 'com.lmax:disruptor:3.+'
    implementation 'org.jsoup:jsoup:1.+'
    implementation 'org.postgresql:postgresql:42.+'
    implementation 'com.googlecode.json-simple:json-simple:1.+'
//    implementation 'org.quartz-scheduler:quartz:2.3.3'
//    implementation 'org.quartz-scheduler:quartz-jobs:2.3.3'
}

task copyDependencies(type: Copy) {
    println "Copying dependencies to: $buildDir/dependencies"
    configurations.runtimeClasspath.each { File file ->
        println file.absolutePath
    }
    
    into "$buildDir/libs/dependencies"
    from configurations.runtimeClasspath
}

build.dependsOn copyDependencies

