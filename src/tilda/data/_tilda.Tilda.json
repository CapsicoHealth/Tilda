/* ===========================================================================
 * Copyright (C) 2015 CapsicoHealth Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{
  "package": "tilda.data"
 ,"dependencies":["tilda/data/tmp/_tilda.TildaTmp.json"]
 ,"extraDDL":{
     "before":[]
    ,"after":["_tilda.Tilda.postgres.helpers-after.sql"]
   }
  
 ,"enumerations": [

    { "name": "ZoneInfo",
      "description": "blah blah",
      "id"    : { "type": "STRING", "size":  5  },
      "value" : { "type": "STRING", "size":  50 }
    }
   ]

 ,"objects":[
    { "name": "Key", "occ": false,
      "description": "The table to keep track of unique keys across distributed objects/tables",
      "columns":[
        { "name": "refnum"        , "type": "LONG"       , "nullable": false,                          "invariant": true, "description": "The primary key for this record" },
        { "name": "name"          , "type": "STRING"     , "nullable": false, "size": 128,             "invariant": true, "description": "The name of the table/object tracked" },
        { "name": "max"           , "type": "LONG"       , "nullable": false,                                             "description": "The pre-allocated max RefNum for this table/object." },
        { "name": "count"         , "type": "INTEGER"    , "nullable": false,                                             "description": "The size of the pre-allocation required by this table/object." },
        
        { "name": "created"       , "type": "DATETIME"   , "nullable": false,          "mode": "AUTO", "invariant": true, "description": "The timestamp for when the record was created.",
                                    "values": [ { "name": "Creation", "value": "NOW", "description": "Creation time"    , "default": "CREATE"} ]
        },
        { "name": "createdETL"    , "type": "DATETIME"   , "nullable": true ,          "mode": "CALCULATED",              "description": "The timestamp for when the record was ETL-created."},
        { "name": "lastUpdated"   , "type": "DATETIME"   , "nullable": false,          "mode": "AUTO",                    "description": "The timestamp for when the record was last updated.",
                                    "values": [ { "name": "Update"  , "value": "NOW", "description": "Last updated time", "default": "ALWAYS"} ]
        },
        { "name": "lastUpdatedETL", "type": "DATETIME"   , "nullable": true ,          "mode": "CALCULATED",              "description": "The timestamp for when the record was last ETL-updated."},
        { "name": "deleted"       , "type": "DATETIME"   , "nullable": true ,                                             "description": "The timestamp for when the record was deleted." }
      ],
      "primary": { "columns": ["refnum"], "autogen": false },
      "indices":[ 
      	{ "name": "Name"     , "columns": ["name"],                          "db": true },
      	{ "name": "AllByName"                     , "orderBy": ["name asc"], "db": false, "subWhere": "deleted is null" } 
      ]
    },



    { "name": "Mapping",
      "description": "Generalized Mapping table",
      "columns":[
         { "name": "type"       , "type": "STRING", "nullable": false, "size":   10, "invariant": true, "description": "The type this mapping is for" }
        ,{ "name": "src"        , "type": "STRING", "nullable": false, "size": 1024, "invariant": true, "description": "The source value for this mapping" }
        ,{ "name": "dst"        , "type": "STRING", "nullable": false, "size": 1024, "invariant": true, "description": "The the destination (mapped) value for this mapping." }
       ],
      "indices":[ 
         { "name": "TypeSrcDst", "columns": ["type", "src", "dst"], "db": true }
       ]
    },


    { "name":"ObjectPerf"
     ,"occ":true
     ,"description":"Performance logs for the Tilda framework"
     ,"columns":[
         { "name":"schemaName"   , "type":"STRING"  , "nullable":false, "size": 64, "invariant":true, "description":"The name of the schema tracked" }
        ,{ "name":"objectName"   , "type":"STRING"  , "nullable":false, "size": 64, "invariant":true, "description":"The name of the table/object tracked" }
        ,{ "name":"startPeriod"  , "type":"DATETIME", "nullable":false,             "invariant":true, "description":"The timestamp for when the record was created." }
        ,{ "name":"endPeriod"    , "type":"DATETIME", "nullable":false,                               "description":"The timestamp for when the record was created." }
        ,{ "name":"selectNano"   , "type":"LONG"    , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"selectCount"  , "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"selectRecords", "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"insertNano"   , "type":"LONG"    , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"insertCount"  , "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"insertRecords", "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"updateNano"   , "type":"LONG"    , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"updateCount"  , "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"updateRecords", "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"deleteNano"   , "type":"LONG"    , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"deleteCount"  , "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
        ,{ "name":"deleteRecords", "type":"INTEGER" , "nullable":false, "default":"0",                "description":"Blah..." }
       ]
     ,"primary":{ "columns":["schemaName", "objectName", "startPeriod"], "autogen":false }
     ,"indices":[ 
      	 { "name":"SchemaByObjectStart", "columns":["schemaName"              ], "orderBy":["objectName", "startPeriod desc"], "db":true  }
      	,{ "name":"SchemaObjectByStart", "columns":["schemaName", "objectName"], "orderBy":["startPeriod desc"              ], "db":false }
      ]
    },
    
    { "name":"TransPerf"
     ,"occ":true
     ,"description":"Performance logs for the Tilda framework"
     ,"columns":[
	      { "name":"startPeriod"           , "type":"DATETIME"   , "nullable":false,             "invariant": true, "description":"The timestamp for when the record was created." }
         ,{ "name":"endPeriod"             , "type":"DATETIME"   , "nullable":false,                                "description":"The timestamp for when the record was created." }
         ,{ "name":"commitNano"            , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"commitCount"           , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"rollbackNano"          , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"rollbackCount"         , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointSetNano"      , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointSetCount"     , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointCommitNano"   , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointCommitCount"  , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointRollbackNano" , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"savepointRollbackCount", "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"statementCloseNano"    , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"statementCloseCount"   , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"connectionCloseNano"   , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"connectionCloseCount"  , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"connectionGetNano"     , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"connectionGetCount"    , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaSetterNano"       , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaSetterCount"      , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToStringNano"     , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToStringCount"    , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToJsonNano"       , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToJsonCount"      , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToCsvNano"        , "type":"LONG"       , "nullable":false, "default":"0",                 "description":"Blah..." }
         ,{ "name":"tildaToCsvCount"       , "type":"INTEGER"    , "nullable":false, "default":"0",                 "description":"Blah..." }
       ],
      "primary": { "columns": ["startPeriod"], "autogen": false },
      "indices":[ 
       ]
    },
    {
      "name": "Connection",
      "description": "Tilda DB Connections Configurations",
      "columns": [
		{ "name": "active",     "type": "BOOLEAN",    "nullable": true,                 "description": "Status Flag"                                },
        { "name": "id",         "type": "STRING",     "nullable": false, "size": 15,    "description": "Connection ID",        "invariant": true    },
        { "name": "driver",     "type": "STRING",     "nullable": false, "size": 100,   "description": "DB Driver"                                  },
        { "name": "db",         "type": "STRING",     "nullable": false, "size": 200,   "description": "DB Url"                                     },
        { "name": "user",       "type": "STRING",     "nullable": false, "size": 30,    "description": "DB User"                                    },
        { "name": "pswd",       "type": "STRING",     "nullable": false, "size": 40,    "description": "DB Password"                                },
        { "name": "initial",    "type": "INTEGER",    "nullable": false,                "description": "Minimum Connections"                        },
        { "name": "max",        "type": "INTEGER",    "nullable": false,                "description": "Maximum Connections"                        },
        { "name": "schemas",    "type": "STRING[]",   "nullable": false,                "description": "Schemas"                                    }
      ],
      "primary": { "columns": ["id"], "autogen": false },
      "indices": [
        { "name": "AllById", "orderBy": ["id asc"], "db": true }
      ],
      "queries": [
        {
          "name": "Active",
          "description": "All Active Connections",
          "from": [],
          "wheres": [
            { "db":"*", "clause":"active IS NOT false" }
          ],
          "orderBy": ["id asc"]
        }
      ]
      
    }
    
   ,{ "name":"Job"
     ,"description":"Jobs details"
     ,"tzFk": false
     ,"columns":[
          { "name":"name"                             , "type":"STRING"  , "nullable": false, "size": 250,  "description":"Name" }
         ,{ "name":"type"                             , "type":"STRING"  , "nullable": true , "size": 250,  "description":"Job type" }
         ,{ "name":"userId"                           , "type":"STRING"  , "nullable": true , "size": 250,  "description":"Job user Id" }
         ,{ "name":"dataStart"                        , "type":"DATETIME", "nullable": true ,               "description":"StartTime" }
         ,{ "name":"dataEnd"                          , "type":"DATETIME", "nullable": true ,               "description":"StartTime" }
         ,{ "name":"start"                            , "type":"DATETIME", "nullable": false,               "description":"StartTime" }
         ,{ "name":"end"                              , "type":"DATETIME", "nullable": true ,               "description":"EndTime" }
         ,{ "name":"status"                           , "type":"BOOLEAN" , "nullable": true ,               "description":"Status" }
         ,{ "name":"msg"                              , "type":"STRING"  , "nullable": true , "size":8192,  "description":"Message details" }
        ]
     ,"primary": { "autogen": true }
     ,"indices":[ 
          { "name":"JobName", "columns":["name"], "orderBy":["start desc"] }
         ,{ "name":"JobType", "columns":["type"], "orderBy":["start desc"] }
        ]         
    }
   ,{ "name":"JobPart"
     ,"description":"Job part details"
     ,"tzFk": false
     ,"columns":[
          { "name":"jobRefnum"                        , "sameAs":"Job.refnum" ,                                 "description":"Parent Job Refnum" }       
         ,{ "name":"name"                             , "type":"STRING"       , "nullable": false, "size": 250, "description":"Job part name" }
         ,{ "name":"type"                             , "type":"STRING"       , "nullable": true , "size": 250, "description":"Job part type" }
         ,{ "name":"dataStart"                        , "type":"DATETIME"     , "nullable": true ,              "description":"Job part data start" }
         ,{ "name":"dataEnd"                          , "type":"DATETIME"     , "nullable": true ,              "description":"Job part data end" }
         ,{ "name":"start"                            , "type":"DATETIME"     , "nullable": false,              "description":"Job part execution start" }
         ,{ "name":"end"                              , "type":"DATETIME"     , "nullable": true ,              "description":"Job part execution end" }
         ,{ "name":"recordsCount"                     , "type":"INTEGER"      , "nullable": true ,              "description":"count of database or file or ... records." }
         ,{ "name":"status"                           , "type":"BOOLEAN"      , "nullable": true ,              "description":"Status flag, i.e., success=true and failure-false" }
       ]
     ,"primary": { "autogen": true }
     ,"foreign": [
         { "name":"Job",  "srcColumns":["jobRefnum"], "destObject": "Job" }
       ]
     ,"indices":[ 
         { "name":"Job"        , "columns":["jobRefnum"], "orderBy":["start desc"] }
        ,{ "name":"JobPartName", "columns":["name"]     , "orderBy":["start desc"] }
        ,{ "name":"JobPartType", "columns":["type"]     , "orderBy":["start desc"] }
       ]         
    }
   ,{ "name":"JobPartMessage"
     ,"description":"Job part message details"
     ,"columns":[
          { "name":"jobRefnum"                        , "sameAs":"Job.refnum"     ,                                 "description":"Parent Job Refnum" }       
         ,{ "name":"jobPartRefnum"                    , "sameAs":"JobPart.refnum" , "nullable": true ,              "description":"Parent Job Part Refnum" }       
         ,{ "name":"notify"                           , "type":"BOOLEAN"          , "nullable": false,              "description":"Notification flag" }
         ,{ "name":"msg"                              , "type":"STRING"           , "nullable": false, "size":8192, "description":"Message details" }
       ]
     ,"primary": { "autogen": true }
     ,"foreign": [
         { "name":"Job",  "srcColumns":["jobRefnum"], "destObject": "Job" }
        ,{ "name":"JobPart",  "srcColumns":["jobPartRefnum"], "destObject": "JobPart" }
       ]
     ,"indices":[ 
         { "name":"Job"        , "columns":["jobRefnum"], "orderBy":["created desc"] }
        ,{ "name":"JobPart"    , "columns":["jobPartRefnum"], "orderBy":["created desc"] }
       ]         
    }
    
    
   ,{ "name": "RefillPerf", "occ": true,
      "description": "Performance logs for the Tilda Refills",
      "columns":[
         { "name":"schemaName"    , "type":"STRING"  , "nullable":false, "size": 64, "invariant": true, "description":"The name of the schema tracked"                    }
        ,{ "name":"objectName"    , "type":"STRING"  , "nullable":false, "size": 64, "invariant": true, "description":"The name of the table/object tracked"              }
        ,{ "name":"startTime"     , "type":"DATETIME", "nullable":false,             "invariant": true, "description":"The timestamp for when the refill started."        }
        ,{ "name":"endTime"       , "type":"DATETIME", "nullable":false,             "invariant": true, "description":"The timestamp for when the refill ended."          }
        ,{ "name":"timeInsertSec" , "type":"LONG"    , "nullable":false,                                "description":"The time, in seconds, the inserts took."       }
        ,{ "name":"timeDeleteSec" , "type":"LONG"    , "nullable":false,                                "description":"The time, in seconds, the deletes took."       }
        ,{ "name":"timeAnalyzeSec", "type":"LONG"    , "nullable":false,                                "description":"The time, in seconds, the analyze took."      }
        ,{ "name":"insertCount"   , "type":"LONG"    , "nullable":false,                                "description":"The count of inserted rows."                       }
        ,{ "name":"deleteCount"   , "type":"LONG"    , "nullable":false,                                "description":"The count of rows deleted."                        }
       ]
     ,"primary": { "columns": ["schemaName", "objectName", "startTime"], "autogen": false }
     ,"indices":[ 
        { "name": "SchemaByObjectStart", "columns": ["schemaName"], "orderBy": ["objectName", "startTime desc"], "db": true },
        { "name": "SchemaObjectByStart", "columns": ["schemaName", "objectName"], "orderBy": ["startTime desc"], "db": false }
      ]
    }
                     
   ,{ "name": "Maintenance", "occ": true,
      "description": "Maintenance information",
      "columns":[
        { "name": "type" , "type": "STRING", "nullable": false, "size":    64, "invariant": true, "description":"The type of maintenance resource to track"        }
       ,{ "name": "name" , "type": "STRING", "nullable": false, "size":   512, "invariant": true, "description":"The name of the maintenance resource to track."   }
       ,{ "name": "value", "type": "STRING", "nullable": true , "size":500000,                    "description":"The value of the maintenance resource to track."  }
      ]
     ,"primary": { "columns": ["type", "name"], "autogen": false }
     ,"indices":[
      ]
    }
    
    
   ,{ "name":"Formula"
     ,"occ":true
     ,"description":"Master formula information"
     ,"columns":[
         { "name":"location"         , "type":"STRING"  , "nullable":false, "size":   64, "invariant":true, "description":"The name of the primary table/view this formula is defined in."  }
        ,{ "name":"location2"        , "type":"STRING"  , "nullable":false, "size":   64, "invariant":true, "description":"The name of the secondary table/view (a derived view, a realized table), if appropriate."   }
        ,{ "name":"name"             , "type":"STRING"  , "nullable":false, "size":   64,                   "description":"The name of the formula/column."  }
        ,{ "name":"type"             , "type":"STRING"  , "nullable":false, "size":    3,                   "description":"The type of the formula/column value/outcome."
                                     , "values": [ { "name":"String"   , "value":"STR", "description": "String"    }
                                                  ,{ "name":"Character", "value":"CHR", "description": "Character" }
                                                  ,{ "name":"Boolean"  , "value":"BOL", "description": "Boolean"   }
                                                  ,{ "name":"Short"    , "value":"SHT", "description": "Short"     }
                                                  ,{ "name":"Integer"  , "value":"INT", "description": "Integer"   }
                                                  ,{ "name":"Long"     , "value":"LNG", "description": "Long"      }
                                                  ,{ "name":"Float"    , "value":"FLT", "description": "Float"     }
                                                  ,{ "name":"Double"   , "value":"DBL", "description": "Double"    }
                                                  ,{ "name":"Date"     , "value":"DT" , "description": "Date"      }
                                                  ,{ "name":"DateTime" , "value":"DTM", "description": "DateTime"  }
                                                  ,{ "name":"Numeric"  , "value":"NUM", "description": "Numeric"   }
                                                  ,{ "name":"Uuid"     , "value":"UI" , "description": "Uuid"      }
                                                 ]
         }
        ,{ "name":"title"            , "type":"STRING"  , "nullable":false, "size":  128,                   "description":"The title of the formula/column."  }
        ,{ "name":"description"      , "type":"STRING"  , "nullable":false, "size":32000,                   "description":"The description of the formula/column."  }
        ,{ "name":"formula"          , "type":"STRING"  , "nullable":true , "size":32000,                   "description":"The formula."  }
        ,{ "name":"htmlDoc"          , "type":"STRING"  , "nullable":true , "size":32000,                   "description":"Pre-rendered html fragment with the full documentation for this formula."  }
        ,{ "name":"referencedColumns", "type":"STRING[]", "nullable":true ,                                 "description":"The list of columns this formula depends on."  }
       ]
     ,"primary": { "autogen": true }
     ,"indices":[
         { "name": "Formula", "columns": ["location" , "name"], "db": true }
        ,{ "name": "RefCols", "orderBy": ["referencedColumns"], "db": true }
      ]
    }
    
   ,{ "name":"Measure"
     ,"occ":true
     ,"description":"Master Measure information"
     ,"columns":[
         { "name":"schema"  , "type":"STRING" , "nullable":false, "size":   64,  "description":"The Schema wher ethe measure is defined."  }
        ,{ "name":"name"    , "type":"STRING" , "nullable":false, "size":   64,  "description":"The name of the measure."  }
       ]
     ,"primary": { "autogen": true }
     ,"indices":[
         { "name": "Measure", "columns": ["schema", "name"], "db": true }
      ]
    }

   ,{ "name":"MeasureFormula"
     ,"occ":true
     ,"description":"Master Measure information"
     ,"columns":[
         { "name":"measureRefnum"   , "sameas":"Measure.refnum", "invariant":true , "description":"The measure."         }
        ,{ "name":"formulaRefnum"   , "sameas":"Formula.refnum", "invariant": true, "description":"The parent formula."  }
       ]
     ,"primary": { "autogen": false, "columns": ["measureRefnum", "formulaRefnum"] }
     ,"foreign": [
         { "name":"Measure",  "srcColumns":["measureRefnum"], "destObject": "Measure" }
        ,{ "name":"Formula",  "srcColumns":["formulaRefnum"], "destObject": "Formula" }
       ]
     ,"indices":[
      ]
    }

   ,{ "name":"FormulaDependency"
     ,"occ":true
     ,"description":"Master formula dependency information"
     ,"columns":[
         { "name":"formulaRefnum"   , "sameas":"Formula.refnum", "invariant": true, "description":"The parent formula."  }
        ,{ "name":"dependencyRefnum", "sameas":"Formula.refnum", "invariant": true, "description":"The dependent formula."   }
       ]
     ,"primary": { "autogen":  false, "columns":["formulaRefnum" , "dependencyRefnum"] }
     ,"foreign": [
         { "name":"Formula1",  "srcColumns":["formulaRefnum"   ], "destObject": "Formula" }
        ,{ "name":"Formula2",  "srcColumns":["dependencyRefnum"], "destObject": "Formula" }
       ]
     ,"indices":[
       ]
    }

   ,{ "name":"FormulaResult"
     ,"occ":true
     ,"description":"Master formula result information, if applicable. Some formulas may not yield an enumeratable value (e.g., returning a date)"
     ,"columns":[
         { "name":"formulaRefnum", "sameas":"Formula.refnum",                        "invariant": true, "description":"The parent formula."  }
        ,{ "name":"value"        , "type":"STRING" , "nullable":false, "size":  100, "invariant": true, "description":"The result value."  }
        ,{ "name":"description"  , "type":"STRING" , "nullable":false, "size":32000,                    "description":"The description of the result value."  }
       ]
     ,"primary": { "autogen": false, "columns":["formulaRefnum" , "value"] }
     ,"foreign": [
         { "name":"Formula",  "srcColumns":["formulaRefnum"   ], "destObject": "Formula" }
       ]
     ,"indices":[
       ]
    }

    ,{ "name": "FailedDependencyDDLScripts"
      ,"description": "A dummy Table created to generate JavaCode to handle results from the Tilda.getDependenciesDDLs() function output."
      ,"columns":[
           { "name":"srcSchemaName", "type":"STRING" , "nullable":false, "size":   100, "description":"The result value."  }
          ,{ "name":"srcTVName"    , "type":"STRING" , "nullable":false, "size":   100, "description":"The result value."  }
          ,{ "name":"seq"          , "type":"INTEGER", "nullable":false               , "description":"The blah"           }
          ,{ "name":"depSchemaName", "type":"STRING" , "nullable":false, "size":   100, "description":"The result value."  }
          ,{ "name":"depViewName"  , "type":"STRING" , "nullable":false, "size":   100, "description":"The result value."  }
          ,{ "name":"restoreScript", "type":"STRING" , "nullable":false, "size":500000, "description":"The result value."  }
       ]
      ,"indices":[
           { "name": "DepedencySequence", "columns": ["srcSchemaName" , "srcTVName", "created", "seq"], "db": true }
       ]
     }    


   ,{ "name": "DateDim"
     ,"description": "The Date dimension, capturing pre-calculated metrics on dates"
     ,"columns":[
          { "name":"dt"            , "type":"DATE"   , "nullable":false, "invariant":true, "description":"The Date date"  }
         ,{ "name":"epoch"         , "type":"LONG"   , "nullable":false,             "description":"The epoch date"  }
         ,{ "name":"dayName"       , "type":"STRING" , "nullable":true , "size":255, "description":"Day name (i.e., Monday, Tuesday...) of the date"  }
         ,{ "name":"dayOfWeek"     , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 day of the week (Monday=1 to Sunday=7) of the date"  }
         ,{ "name":"dayOfMonth"    , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 day of the month (starting with 1) of the date"  }
         ,{ "name":"dayOfQuarter"  , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 day of the quarter (starting with 1) of the date"  }
         ,{ "name":"dayOfYear"     , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 day of the year (starting with 1) of the date"  }
         ,{ "name":"weekOfMonth"   , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 week of the month (starting with 1) of the date"  }
         ,{ "name":"weekOfYear"    , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 week of the year (starting with 1) of the date"  }
         ,{ "name":"month"         , "type":"DATE"   , "nullable":true ,             "description":"Month-truncated date."  }
         ,{ "name":"monthOfYear"   , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 month of the year (starting with 1) of the date"  }
         ,{ "name":"monthName"     , "type":"STRING" , "nullable":true , "size":255, "description":"Month name (i.e., January, February...) of the date."  }
         ,{ "name":"monthNameShort", "type":"STRING" , "nullable":true , "size":255, "description":"Monday short name (i.e., Jan, Feb...) of the date."  }
         ,{ "name":"quarterOfYear" , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 quarter of the year (starting with 1) of the date."  }
         ,{ "name":"quarterName"   , "type":"STRING" , "nullable":true , "size":255, "description":"Quarter name (i.e., Q1, Q2...) of the date."  }
         ,{ "name":"year"          , "type":"INTEGER", "nullable":true ,             "description":"ISO 8601 year (1.e., 2018) of the date."  }
         ,{ "name":"mmyyyy"        , "type":"STRING" , "nullable":true , "size":  6, "description":"The mmyyyy printable version of a date."  }
         ,{ "name":"mmddyyyy"      , "type":"STRING" , "nullable":true , "size":  8, "description":"The mmddyyyy printable version of a date."  }
         ,{ "name":"yyyymmdd"      , "type":"STRING" , "nullable":true , "size":  8, "description":"The yyyymmdd sortable printable version of a date."  }
         ,{ "name":"isWeekend"     , "type":"INTEGER", "nullable":true ,             "description":"1 if this is a weekend day, 0 otherwise."  }
         ,{ "name":"isBusinessDay" , "type":"INTEGER", "nullable":true ,             "description":"1 if this is a business day, 0 otherwise."  }
         ,{ "name":"isHoliday"     , "type":"INTEGER", "nullable":true ,             "description":"1 if this is a holiday, 0 otherwise."  }
         ,{ "name":"holidayName"   , "type":"STRING" , "nullable":true , "size":255, "description":"The name of the holiday if applicable."  }
      ]
     ,"primary": { "autogen": false, "columns": ["dt"] } 
    }

   ,{ "name": "DateLimitDim"
     ,"occ":false
     ,"description": "A single row for min, max and invalid dates for the Date_Dim"
     ,"columns":[
          { "name":"invalidDate", "sameas":"DateDim.dt", "nullable":false, "description":"The invalid date"  }
         ,{ "name":"minDate"    , "sameas":"DateDim.dt", "nullable":false, "description":"The min date"  }
         ,{ "name":"maxDate"    , "sameas":"DateDim.dt", "nullable":false, "description":"The max date"  }
      ]
     ,"foreign": [
          { "name":"InvalidDt" , "srcColumns":["invalidDate" ], "destObject": "DateDim" }
         ,{ "name":"MinDt"     , "srcColumns":["minDate"     ], "destObject": "DateDim" }
         ,{ "name":"MaxDt"     , "srcColumns":["maxDate"     ], "destObject": "DateDim" }
       ]
     ,"indices": [ 
          { "name":"InvalidDate"  , "columns": ["invalidDate"] }
       ]
    }
  ]
    
    
 ,"views": [
     { "name": "FormulaResultView"
      ,"description": "A view of formulas and their values."
      ,"columns":[
          { "sameas": "FormulaResult.formulaRefnum"}
         ,{ "sameas": "FormulaResult.value"        }
         ,{ "sameas": "FormulaResult.description"  }
         ,{ "sameas": "Formula.location"           }
         ,{ "sameas": "Formula.name"               }
        ]
      ,"subWhereX":{
          "clause":["Formula.deleted is null and FormulaResult.deleted is null"
                   ]
         ,"description":["Active formulas and their result values"]
        }
     }    

    ,{ "name": "FormulaDependencyView"
      ,"description": "A view of formulas and their direct dependencies."
      ,"columns":[
          { "sameas": "FormulaDependency.formulaRefnum"    }
         ,{ "sameas": "Formula.location"                   }
         ,{ "sameas": "Formula.name"                       }
         ,{ "sameas": "Formula.referencedColumns"          }
         ,{ "sameas": "FormulaDependency.dependencyRefnum" }
         ,{ "sameas": "Formula.name"                       , "name":"dependentFormulaName"}
         ,{ "sameas": "Formula.location"                   , "name":"dependentFormulaLocation"}
         ,{ "sameas": "Formula.referencedColumns"          , "name":"dependentReferencedColumns"}
        ]
      ,"subWhereX":{
          "clause":["Formula.deleted is null"
                   ]
         ,"description":["Active formulas and their sub-formulas"]
        }
     }

/*
    ,{ "name": "FormulaDependencyFullView"
      ,"dbOnly": true
      ,"description": "A view of formulas and their full hierarchical formula dna column dependencies."
      ,"columns":[
          { "sameas": "FormulaDependencyView.formulaRefnum"                                             }
         ,{ "sameas": "FormulaDependencyView.location"                   , "name":"formulaLocation"     }
         ,{ "sameas": "FormulaDependencyView.name"                       , "name":"formulaName"         }
         ,{ "sameas": "FormulaDependencyView.dependentReferencedColumns" , "name":"formulaDependencies" }
         ,{ "sameas": "FormulaDependencyView.referencedColumns"          , "name":"columnDependencies"  }
        ]
      ,"subWhereX":{
          "clause":["Formula.deleted is null"
                   ]
         ,"description":["Active formulas and their full hierarchical dependent formulas and columns"]
        }
     }    
*/     

    ,{ "name": "MeasureFormulaView"
      ,"description": "A view of formulas and their dependencies."
      ,"columns":[
          { "sameas": "MeasureFormula.measureRefnum"                    }
         ,{ "sameas": "Measure.schema"      , "name":"measureSchema"    }
         ,{ "sameas": "Measure.name"        , "name":"measureName"      }
         ,{ "sameas": "Formula.refnum"      , "name":"formulaRefnum"    }
         ,{ "sameas": "Formula.location"    , "name":"formulaLocation"  }
         ,{ "sameas": "Formula.location2"   , "name":"formulaLocation2" }
         ,{ "sameas": "Formula.name"        , "name":"formulaName"      }
         ,{ "sameas": "Formula.title"              }
         ,{ "sameas": "Formula.description"        }
         ,{ "sameas": "Formula.type"               }
         ,{ "sameas": "Formula.formula"            }
        ]
      ,"subWhereX":{
          "clause":["Formula.deleted is null and Measure.deleted is null"
                   ]
         ,"description":["Active formulas and their sub-formulas"]
        }
     }       
     
     
    ,{ "name": "JobView"
      ,"description": "A view of the job data."
      ,"columns":[
          { "sameas": "Job.refnum"            , "name":"jobRefnum"           }
         ,{ "sameas": "Job.name"              , "name":"jobName"             }
         ,{ "sameas": "Job.type"              , "name":"jobType"             }
         ,{ "sameas": "Job.userId"            , "name":"jobUserId"           }
         ,{ "sameas": "Job.dataStart"         , "name":"jobDataStart"        }
         ,{ "sameas": "Job.dataEnd"           , "name":"jobDataEnd"          }
         ,{ "sameas": "Job.start"             , "name":"jobStart"            }
         ,{ "sameas": "Job.end"               , "name":"jobEnd"              }
         ,{ "sameas": "Job.status"            , "name":"jobStatus"           }
         ,{ "sameas": "Job.msg"               , "name":"jobMsg"              }
         ,{ "sameas": "JobPart.name"          , "name":"jobPartName"         }
         ,{ "sameas": "JobPart.type"          , "name":"jobPartType"         }
         ,{ "sameas": "JobPart.dataStart"     , "name":"jobPartDataStart"    }
         ,{ "sameas": "JobPart.dataEnd"       , "name":"jobPartDataEnd"      }
         ,{ "sameas": "JobPart.start"         , "name":"jobPartStart"        }
         ,{ "sameas": "JobPart.end"           , "name":"jobPartEnd"          }
         ,{ "sameas": "JobPart.recordsCount"  , "name":"jobPartRecordsCount" }
         ,{ "sameas": "JobPart.status"        , "name":"jobPartStatus"       }
         ,{ "sameas": "JobPartMessage.notify" , "name":"jobPartNotify"       }
         ,{ "sameas": "JobPartMessage.msg"    , "name":"jobPartMessage"      }
        ]
     }

   ]
}
